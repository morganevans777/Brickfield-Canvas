<style>

    .add-box {
        padding-left: 40px;
        padding-right: 40px;
    }

    input {
        line-height: normal;
        border-color: lightblue !important;
    }

    /* google maps */
    
    #map {
        height: 300px;
        width: 700px;
      }
      /* Optional: Makes the sample page fill the window. */
     html, body {
        height: 100%;
        margin: 0;
        padding: 0;
      }
      
      .controls {
        background-color: #fff;
        border-radius: 2px;
        border: 1px solid transparent;
        box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);
        box-sizing: border-box;
        font-family: Roboto;
        font-size: 15px;
        font-weight: 300;
        height: 29px;
        margin-left: 17px;
        margin-top: 10px;
        outline: none;
        padding: 0 11px 0 13px;
        text-overflow: ellipsis;
        width: 400px;
      }

      .controls:focus {
        border-color: #4d90fe;
      }
      
      .title {
        font-weight: bold;
      }
      
      #infowindow-content {
        display: none;
      }
      
      #map #infowindow-content {
        display: inline;
      }

</style>

<form method='POST' action='/add/{{category}}'>

<div class='add-box'>
    <h5 class='blue-text'>Please fill in the details of your event below...</h5>

    <h5 class='blue-text left-align'>Event name</h5>
        <input placeholder='event name' type='text' name='title'/>
    <h5 class='blue-text left-align'>Description of event</h5>
        <input placeholder='description' type='text' name='description'/>
   
    <h5 class='blue-text left-align'>Event Location</h5>
   
    <input id="pac-input" class="controls" type="text" placeholder="Enter a location">
    <div id="map"></div>
    <div id="infowindow-content">
      <span id="place-name"  class="title"></span><br>
        Place ID <span id="place-id"></span><br>
      <span id="place-address"></span>
    </div>
    
    <br></br>

    <input value='add event' type='submit' class='btn blue darken-3 z-depth-5'>

</div>
</form>

<script>
      // This sample uses the Place Autocomplete widget requesting only a place
      // ID to allow the user to search for and locate a place. The sample
      // then reverse geocodes the place ID and displays an info window
      // containing the place ID and other information about the place that the
      // user has selected.

      // This example requires the Places library. Include the libraries=places
      // parameter when you first load the API. For example:
      // <script src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places">

    function initMap() {
        var map = new google.maps.Map(document.getElementById('map'), {
          center: {lat: -33.8688, lng: 151.2195},
          zoom: 13
        });

        var input = document.getElementById('pac-input');

        var autocomplete = new google.maps.places.Autocomplete(input);
        autocomplete.bindTo('bounds', map);

        map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);

        var infowindow = new google.maps.InfoWindow();
        var infowindowContent = document.getElementById('infowindow-content');
        infowindow.setContent(infowindowContent);
        var marker = new google.maps.Marker({
          map: map
        });
        marker.addListener('click', function() {
          infowindow.open(map, marker);
        });

        autocomplete.addListener('place_changed', function() {
          infowindow.close();
          var place = autocomplete.getPlace();
          if (!place.geometry) {
            return;
          }

          if (place.geometry.viewport) {
            map.fitBounds(place.geometry.viewport);
          } else {
            map.setCenter(place.geometry.location);
            map.setZoom(17);
          }

          // Set the position of the marker using the place ID and location.
          marker.setPlace({
            placeId: place.place_id,
            location: place.geometry.location
          });
          marker.setVisible(true);

          infowindowContent.children['place-name'].textContent = place.name;
          infowindowContent.children['place-id'].textContent = place.place_id;
          infowindowContent.children['place-address'].textContent =
              place.formatted_address;
          infowindow.open(map, marker);
        });
      }

    </script>
    <script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCMyM-4Pe80L_lgrL2Dq1TOIua6Vilthog&callback=initMap"
  type="text/javascript"></script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCMyM-4Pe80L_lgrL2Dq1TOIua6Vilthog&libraries=places"></script>

